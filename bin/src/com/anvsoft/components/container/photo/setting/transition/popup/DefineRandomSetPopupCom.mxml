<?xml version="1.0" encoding="utf-8"?>
<popup:DefineRandomSetPopupAS xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:popup="com.anvsoft.components.container.photo.setting.transition.popup.*"
		 width="470"
		 height="415"
		 title="Define Random Transition Effect Set">
	
	<s:VGroup gap="5" horizontalAlign="left"
			  top="15" bottom="15" left="15" right="15">
		<s:Label id="vGroupLabel" paddingBottom="5"
			text="Please check the transition effects from which random will choose:"/>
		<s:DataGrid id="dataGrid"
					width="100%"
				    height="100%"
				    rowHeight="18"
					dataProvider="{dgArrayCollection}"
					initialize="{dataGrid.columnHeaderGroup.height=0;}">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn>
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer creationComplete="creationCompleteHandler(event)"
													dataChange="dataChangeHandler(event)">
									<fx:Script>
										<![CDATA[
											import com.anvsoft.events.CommandDispatcher;
											import com.anvsoft.events.components.container.photo.setting.transition.popup.DefineRandomSetPopupComEvent;
											import com.anvsoft.utils.string.StringUtils;
											import com.anvsoft.utils.language.LanguageManager;
											
											private var transVector:Vector.<String>;
											private function creationCompleteHandler(e:Event):void
											{
												CommandDispatcher.getInstance().addEventListener(DefineRandomSetPopupComEvent.SELECT_ALL_TRANSITION, selectAllTransition);
												CommandDispatcher.getInstance().addEventListener(DefineRandomSetPopupComEvent.SELECT_OUT_ALL_TRANSITION, selectOutAllTransition);
												CommandDispatcher.getInstance().addEventListener(DefineRandomSetPopupComEvent.UPDATE_ITEM_RENDERER, dataChangeHandler);
											}
											private function dataChangeHandler(e:Event = null):void
											{
												var indexStr:String = StringUtils.GetLeadingZeroString(data.id, 2);
												//set data.name value in TransitionPanelAS.as file/////////////
												//checkBox.label = "[" + indexStr + "]" + data.name;
												
												var key:String = (70000 + int(data.id)).toFixed();
												checkBox.label = "[" + indexStr + "]" + LanguageManager.getInstance().getString(key);
												
												checkBox.selected = data.select;
											}
											private function checkBoxClickHandler(e:MouseEvent):void
											{
												transVector = this.parentDocument.parentDocument.transitionVector;
												var transId:String = data.id;
												if(CheckBox(e.target).selected)
												{
													transVector.push(transId);
													data.select = true;
												}else{
													var index:int = transVector.indexOf(transId);
													if(index > -1)
													{
														transVector.splice(index, 1);
													}
													data.select = false;
												}
												//trace(transVector);
											}
											private function selectAllTransition(e:DefineRandomSetPopupComEvent):void
											{
												if(!checkBox.selected)
												{
													checkBox.selected = true;
													data.select = true;
												}
											}
											private function selectOutAllTransition(e:DefineRandomSetPopupComEvent):void
											{
												if(checkBox.selected)
												{
													checkBox.selected = false;
													data.select = false;
												}
											}
										]]>
									</fx:Script>
									<s:CheckBox id="checkBox"
											    left="2"
												verticalCenter="0"
												click="checkBoxClickHandler(event)"/>
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:CheckBox id="selectAll" label="Select All/None"/>
		<mx:HRule width="100%" height="1" strokeColor="0x222222"/>
		<s:HGroup width="100%" paddingTop="5" horizontalAlign="right">
			<s:Button id="okButton" width="80" label="OK"/>
			<s:Button id="cancelButton" width="80" label="Cancel"/>
		</s:HGroup>
	</s:VGroup>
</popup:DefineRandomSetPopupAS>
